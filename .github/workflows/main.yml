name: Continuous Integration and Delivery

on: [push]

env:
  WEB_IMAGE:     docker.pkg.github.com/$GITHUB_REPOSITORY/web2
  NGINX_IMAGE:   docker.pkg.github.com/$GITHUB_REPOSITORY/nginx2
  DB_IMAGE:      docker.pkg.github.com/$GITHUB_REPOSITORY/db2
  ELASTIC_IMAGE: docker.pkg.github.com/$GITHUB_REPOSITORY/elastic2
  REDIS_IMAGE:   docker.pkg.github.com/$GITHUB_REPOSITORY/redis2

jobs:

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo DEBUG=0 >> .env
          echo SQL_ENGINE=django.db.backends.postgresql >> .env
          echo DATABASE=postgres >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          #echo SQL_DATABASE=${{ secrets.SQL_DATABASE }} >> .env
          #echo SQL_USER=${{ secrets.SQL_USER }} >> .env
          #echo SQL_PASSWORD=${{ secrets.SQL_PASSWORD }} >> .env
          #echo SQL_HOST=${{ secrets.SQL_HOST }} >> .env
          #echo SQL_PORT=${{ secrets.SQL_PORT }} >> .env
          echo DJANGO_ALLOWED_HOSTS=5.63.154.150 localhost 127.0.0.1 [::1] >> .env
      - name: Set environment variables
        run: |
          echo ::set-env name=WEB_IMAGE::${{ env.WEB_IMAGE }}
          echo ::set-env name=NGINX_IMAGE::${{ env.NGINX_IMAGE }}
          echo ::set-env name=DB_IMAGE::${{ env.DB_IMAGE }}
          echo ::set-env name=ELASTIC_IMAGE::${{ env.ELASTIC_IMAGE }}
          echo ::set-env name=REDIS_IMAGE::${{ env.REDIS_IMAGE }}
      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #- name: Pull images
      #  run: |
      #    docker pull ${{ env.WEB_IMAGE }} || true
       #   docker pull ${{ env.NGINX_IMAGE }} || true
       #   docker pull ${{ env.DB_IMAGE }} || true
       #   docker pull ${{ env.REDIS_IMAGE }} || true
       #   docker pull ${{ env.ELASTIC_IMAGE }} || true
      - name: Build images
        run: |
          docker-compose -f docker-compose.ci.yml build
      - name: Push images
        run: |
          docker push ${{ env.WEB_IMAGE }}
          docker push ${{ env.NGINX_IMAGE }}
          docker push ${{ env.DB_IMAGE }}
          docker push ${{ env.REDIS_IMAGE }}
          docker push ${{ env.ELASTIC_IMAGE }}


